classdef Yolov3Detection < vision.labeler.AutomationAlgorithm
    
    properties(Constant)
        
        Name = 'YoloV3 Detection';        
        Description = 'This is a automatic Car labeling algorithm.';
 
        UserDirections = {...
            ['Automation algorithms are a way to automate manual labeling ' ...
            'tasks. This AutomationAlgorithm is a template for creating ' ...
            'user-defined automation algorithms. Below are typical steps' ...
            'involved in running an automation algorithm.'], ...
            ['Run: Press RUN to run the automation algorithm. '], ...
            ['Review and Modify: Review automated labels over the interval ', ...
            'using playback controls. Modify/delete/add ROIs that were not ' ...
            'satisfactorily automated at this stage. If the results are ' ...
            'satisfactory, click Accept to accept the automated labels.'], ...
            ['Change Settings and Rerun: If automated results are not ' ...
            'satisfactory, you can try to re-run the algorithm with ' ...
            'different settings. In order to do so, click Undo Run to undo ' ...
            'current automation run, click Settings and make changes to ' ...
            'Settings, and press Run again.'], ...
            ['Accept/Cancel: If results of automation are satisfactory, ' ...
            'click Accept to accept all automated labels and return to ' ...
            'manual labeling. If results of automation are not ' ...
            'satisfactory, click Cancel to return to manual labeling ' ...
            'without saving automated labels.']};
    end
    
    properties
        Detector
        
    end
    
    methods
        function isValid = checkLabelDefinition(~, labelDef)
            % Only labels for rectangular ROI's are considered valid.
            isValid = (labelDef.Type == labelType.Rectangle);      
        end
        
        function isReady = checkSetup(this)
            % Expect there to be at least one label to automate.
            isReady = ~isempty(this.SelectedLabelDefinitions);                      
        end
    end
    
    methods
        function initialize(this, ~) 
            disp('Executing initialize on the first image frame')
            this.Detector = load("pretrained_detectors/yolov3_object_detect_latest.mat").yolov3Detector;
        end

        function autolabels = run(this, I)
            disp('Executing run on image frame')
            autolabels = [];
			[bboxes,~] = detect(this.Detector,I);
			if ~isempty(bboxes)
				% Add the selected label at the bounding box position(s)
				autolabels = struct(...
					'Type', labelType.Rectangle,...
					'Name', this.SelectedLabelDefinitions.Name,...
					'Position', bboxes);     
            end
        end
    end
end
% Copyright 2020 The MathWorks, Inc.